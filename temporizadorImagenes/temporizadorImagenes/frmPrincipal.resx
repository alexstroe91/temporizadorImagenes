<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblImagen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAMNQTFRF////
        HR0b2wxMAAAAoqKi2wBJ2gBG2QA8ra2t2AA0Dw8M2gBFlZWV2QA72gBB2gBDb29u9tLZ2AA3GRkXNzc2
        ++3w2AAyFBQS7Ozs8r/J/PL0+uXp5GaC+eDl7JysBgYAVFRTt7e30dHR9vb241987qe18LK+9MfQ3jdh
        5W6I99je4EZrwcHB3t7e4VJz53+V6Ymd6pGj3Spa8bjDRUVEgoKCJyclW1taenp57J2t4E1wkJCPWFhY
        ZWVkLy8tTU1M3jBdcM2aYAAACihJREFUeF7tnP1fmzwQwDM6wKpQS7Wurdbtse9Oq3U6ddvj8///Vc/d
        5WgtGxBsoNPPfX8RQqJJ7iV3CagEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQXjP
        fL37VjPgkKtvwuXdt8MV9ztcXC77tdrZ8Yd8av9wgw34AX+qteT4jItLZadW4xHkcPydW2zAwfrfqn3h
        8hI5fzYcH3Tnktu8ni/rf6x1z+Ulcnm2y38tl90DbrMBrRb/Mk3tK5eXx2Vt/U9mUfvEjV7PzroIj79x
        eXl8KjDAsztutAEJg7DhuXK4N/GgTO2cG72e/YQIP3N5edwZOxkY4A9u9HrOkyLc3HPl8KnAAD/UuNEG
        3J3x79LY8Fw5/DJ2ozDAj9zo9SQn1ILnyuGygAhbFmKPg/UJteG5cvhZxM1sHj4mJ9SC58rhnyIi/MCN
        NuD7+oRaUPs8vhUR4ebh4/qEtmoPXF4eX4uI8F9utAGHnIAxFUTch+bRjHH4+Gnn7iCFh52XlB+O/hbk
        Z2IYPl7+rNV2U6ggPktyX0SERt27q6UbdgXxWZJEkJ/J8U9ulMX5YdZvLD8++43dIiI06d59Vny0+4tr
        VcfHAiI0Ch+fMwPALYiwwACNwsdspa8gxE6SyNMyOTNZmrN/X/khdpJknpaJSfiYrfRGc2SXRJ6WiVHi
        myPC0kPsJMUSX4Pu/cgWYflZUpKHIonvPjfKIEfp/24Rtkz2LrKV3mSOLFNo78Ig8c2ZMQv7OwUptHdh
        kvhmK30FiW6Sz5YT32wRGqm5XQrtXZgkvon9pQQW9neKUmjvwiBRzVb6VourVUeRvQujxPd7tggr2KxI
        8K/lxDdHhBUcDyYotHdhkpc/Zyp9BceDScD/G2OS1GX7rZaNFxuKUWTvwigvz/ZbWxDhWRERGiR12X5r
        95mrVUehvQuTpC5zz7VVfchdbO/CoHuZImxtYXMmO41b58wk8c3ac93dwgCt711kLD3Hte/Vq6h64DMR
        I0wyAq76J56r38QH9j+as/+Rj1Ay+PJjP4Uvle+tFWeHZZEFVzXndD4YXI35Ztvkm2zxtKjfbngNh2+2
        Tf6OcfGYelR3HCfo8N2WMfC6xQOyEAboLvhm2+TvGL9MHY9mzRVHXEj0OsNhbHd9HKHf5Dswys7o9pSv
        ieZoOJrxNTKDxrrg5rF/0xvBxbCLtxYw2G5cpo6jqygK/BX1xXIQj4vID0M/wr4pFcAAHW8+PcE5OLr2
        8Fk0iSdkNo2CEAr+44Le3A+gQhgtoKD7eNsd+0qNXf1wc7J3XpA4dbwNQw97/gK3rSUzDEJXl7RRjNcN
        ut4LB3Azb+s7x9OOpzuo760V3MQVHA/1etpVIEU1v6aHm2Ow3cgR2TU6jySNOT668PkWRjWFMUR80+6p
        GXjUmABHP45W0xShXg5WjZ06CPEKBtkcP/ZsjTB/u5HPAx/jbq/hnYCrclgmCBZMeVAw/GabZYv44Ftv
        23yDoKVO0WRjIhghyH3ave43LTlig+1GnTqeUs88n/sTXzRulJqgUNwoorGEj6pHVV3XjbpHNC1+pIfc
        PlIzfOYGDd26DfqNNdwg1DXA/mZD1esrR/Vjq92Qw1wR8mHSBPsfnsweqW/hoKkvQM8eUcu8iyN1gVWC
        rhrgiBuTyaKvB++N1Q0OwAP9c6CO68xUHwtAxqTQWEA19kjnrWKw3ajzjjF6R7SxJo0HVPEUL9wLpegn
        Oj7sfdhXM7RXbZ8dbBWBKs5Rj8Eqh1gZrW+KQ4+6aooP6uCuqAAvLJP/ng0fJi1QPtAjLSh0CCQp6P0N
        ytKHRYJ6Hyr1xJ3nVu4TrBc0aJgfHI8HhtbDgvBGneJPmi+6QNdrF4O9Kh1y31LvwebGqFUoIJIU6J1W
        M/TyqGb+UDWxICRHOMJWdZDYCQkIVgGcDRClugo9zwOju6IH6EDxAp9YJn+vilNHVEB0A0lZnqo5DgwD
        UOy9CwscGSxWVcqFS5QLCagBg8YRo6r3ngaQeIzULJ4vmhZ8Ypn8vSo+idAK2E/KErpE+udOoA6anH+r
        TQ+rQqulxFBAAayoWACiXKJ9Exg6TdzLJ5Yw0FF9EoFychpwQbIEW9OSAvUi/UNfgmEMKiv1dY9a4XjI
        OZHe9rVCgyg5qO3yNM2PblHYTmjfkebvVfGBm46jhyyVEC5IUqBe2kHAKtDFi2isTQ/9DgRjscRIUjA/
        WqHVuI0hbQQFNBvOno74KGKzi3nWhMNBE9M5UbwwoDmS3yRnD14Slw6UBlVdSkxLCuaHAgEQpR4XmC6p
        fMyeY19H81/SONbb2BRHg4mtFgaSFJjj0kFQ72GdIyHrxFdLjG0MB03LS6jbkunSNGncAPTANiZZE4Xc
        pIBoYquFwcO+gTnG1ki9R2UlIf+HrcgFoU8iSQW3WqFBlDpQBdOl2SA839NJl13yX9Lg0xqKo8HEVgsD
        BWxgjrE1aq9f72khY1VeAtEnoaRw0E/4E/UXH3gQBtAAQ98P6legH/YxyZoo5CYFRBNbLQwoFTRHUrN4
        cQRl1UKGqrwEok/ScdpYKzSqOrktMF2ajaAzG79M9W2SfdiJ8GmNjs4wlMSQCxeG2BzJojC5oKAVlJWE
        7FOPaQlEiWERDhoVGkXZxboQp72YjXIwDrmX6wHJErVraY5kjY2+6uCIIU4jITsRtiKJwYB6FzjSdlMr
        NAzolDwphAE0G5QBl0T+1wn8miKaj4N7FTqEhC7F5tghp+g0IhwgrmYkW2Aw0fKGnDHA1j5YqpYpFwQ3
        ejZKiLSXGJzw65B7uR7QBXZpaY5kUAytZqTPQL3Da57Gx3G8qOsE8OtoCkqItJckPkH+Axxy03oAubkO
        TPCCnGQbZLny9k5A9qQFR6On2oTbpjRjtfa5bQhadfZkP0xbkp818fd5nch1G+hdxnW4wH2007br7rXB
        SapzX8vMDUO9mjXRUrUzindjvID3G2mzAguiCWa5Vw3Xi0pY5JcY6Kg+qHiaTC7mGE5d4QVIUA2cxWKq
        U/HepI6r2cVyte6EQRhG4IxgREEAz6IBrY1IP/JDKDihgtliMilnEWSsHVQcjROrWXM00jKDy04n8ew2
        UVAepRxU/FUYHFRU//KPTYocVLxNfvGpbgYW/qvJX84Bj/Q33sCRvRFpeYeFf7Twl5CWd1T/FndJpJ3W
        bOFF/JJIyTtau/z8zZOWd2zhRfySSHmzeAtvcZdEWt7xxgO5F6T8p6UK/slTRaTlHW88kFuRlnds4Z8I
        lERa3rGFd4DLIS3v2MIX6CWR9oLUuw+5t/D5ckmkfZq2hW8pyiE15K7+8+WSSPuu6d1kTWmnNe8na0r5
        HnML376WRGrWVP23ryWRclrzxvdOX5DyglTr3Sz2Kac12/gorST+lDW1dmuf38taDyH3H7h/eC9JoSAI
        giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI1aPU/9tQxmwMKW+7AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>